// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.15;

import "forge-std/Test.sol";
import {console} from "forge-std/console.sol";
import "../src/PrngAttacker.sol";
import "../src/PrngVictim.sol";

contract PrngExploitTest is Test {
    PrngAttackerFactory private attackFactory;
    PrngVictim private victim;

    function setUp() public {
        victim = new PrngVictim();
        address victimAddress = address(victim);
        vm.label(victimAddress, "Victim Contract");
        console.log("victim: ", victimAddress);

        attackFactory = new PrngAttackerFactory(victimAddress);
        vm.label(address(attackFactory), "Attack Factory");

        // fund the attacker's account
        vm.deal(address(attackFactory), 2 ether);
        console.log(address(attackFactory).balance);
    }

    function testExploitVictim() public {
        address exploit;
        attackFactory.exploitVictim(200);
        exploit = attackFactory.deployedExploit();
        assertEq(victim.balanceOf(exploit), 1);

        attackFactory.exploitVictim(200);
        exploit = attackFactory.deployedExploit();
        assertEq(victim.balanceOf(exploit), 1);
    }
}
