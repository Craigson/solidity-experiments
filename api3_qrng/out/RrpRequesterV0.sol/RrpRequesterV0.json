{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_airnodeRrp",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "airnodeRrp",
      "outputs": [
        {
          "internalType": "contract IAirnodeRrpV0",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161018638038061018683398101604081905261002f91610099565b6001600160a01b0381166080819052604051632b77c09f60e21b81523060048201526001602482015263addf027c90604401600060405180830381600087803b15801561007b57600080fd5b505af115801561008f573d6000803e3d6000fd5b50505050506100c9565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b60805160a56100e160003960006031015260a56000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806371bab66614602d575b600080fd5b60537f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f3fea2646970667358221220c0b5d98e7812ba41385fcf176be6b8b76b150a8fa936529fe84c1a90cee2447b64736f6c63430008100033",
    "sourceMap": "169:894:4:-:0;;;894:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;937:39:4;;;;;;986:68;;-1:-1:-1;;;986:68:4;;1042:4;986:68;;;477:51:6;1049:4:4;544:18:6;;;537:50;986:47:4;;450:18:6;;986:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;894:167;169:894;;14:290:6;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:6;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:6:o;309:284::-;169:894:4;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c806371bab66614602d575b600080fd5b60537f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f3fea2646970667358221220c0b5d98e7812ba41385fcf176be6b8b76b150a8fa936529fe84c1a90cee2447b64736f6c63430008100033",
    "sourceMap": "169:894:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;199:41;;;;;;;;-1:-1:-1;;;;;199:32:6;;;181:51;;169:2;154:18;199:41:4;;;;;;",
    "linkReferences": {},
    "immutableReferences": {
      "6": [
        {
          "start": 49,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "airnodeRrp()": "71bab666"
  },
  "ast": {
    "absolutePath": "lib/airnode/packages/airnode-protocol/contracts/rrp/requesters/RrpRequesterV0.sol",
    "id": 48,
    "exportedSymbols": {
      "IAirnodeRrpV0": [
        417
      ],
      "IAuthorizationUtilsV0": [
        461
      ],
      "ITemplateUtilsV0": [
        511
      ],
      "IWithdrawalUtilsV0": [
        559
      ],
      "RrpRequesterV0": [
        47
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1032:4",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:23:4",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "57:41:4",
        "absolutePath": "lib/airnode/packages/airnode-protocol/contracts/rrp/interfaces/IAirnodeRrpV0.sol",
        "file": "../interfaces/IAirnodeRrpV0.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48,
        "sourceUnit": 418,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47,
        "nodeType": "ContractDefinition",
        "src": "169:894:4",
        "nodes": [
          {
            "id": 6,
            "nodeType": "VariableDeclaration",
            "src": "199:41:4",
            "constant": false,
            "functionSelector": "71bab666",
            "mutability": "immutable",
            "name": "airnodeRrp",
            "nameLocation": "230:10:4",
            "scope": 47,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IAirnodeRrpV0_$417",
              "typeString": "contract IAirnodeRrpV0"
            },
            "typeName": {
              "id": 5,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4,
                "name": "IAirnodeRrpV0",
                "nameLocations": [
                  "199:13:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 417,
                "src": "199:13:4"
              },
              "referencedDeclaration": 417,
              "src": "199:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAirnodeRrpV0_$417",
                "typeString": "contract IAirnodeRrpV0"
              }
            },
            "visibility": "public"
          },
          {
            "id": 22,
            "nodeType": "ModifierDefinition",
            "src": "420:122:4",
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "446:96:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "464:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "468:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "464:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 14,
                              "name": "airnodeRrp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "486:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAirnodeRrpV0_$417",
                                "typeString": "contract IAirnodeRrpV0"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAirnodeRrpV0_$417",
                                "typeString": "contract IAirnodeRrpV0"
                              }
                            ],
                            "id": 13,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "478:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "478:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 15,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "478:19:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "464:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206e6f74204169726e6f646520525250",
                        "id": 17,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "499:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ec8d99ac81b26aaf48e4cd2f78e82eb54b74844d812499935ef9ce3cfbc547f",
                          "typeString": "literal_string \"Caller not Airnode RRP\""
                        },
                        "value": "Caller not Airnode RRP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ec8d99ac81b26aaf48e4cd2f78e82eb54b74844d812499935ef9ce3cfbc547f",
                          "typeString": "literal_string \"Caller not Airnode RRP\""
                        }
                      ],
                      "id": 9,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "456:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "456:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19,
                  "nodeType": "ExpressionStatement",
                  "src": "456:68:4"
                },
                {
                  "id": 20,
                  "nodeType": "PlaceholderStatement",
                  "src": "534:1:4"
                }
              ]
            },
            "documentation": {
              "id": 7,
              "nodeType": "StructuredDocumentation",
              "src": "247:168:4",
              "text": "@dev Reverts if the caller is not the Airnode RRP contract.\n Use it as a modifier for fulfill and error callback methods, but also\n check `requestId`."
            },
            "name": "onlyAirnodeRrp",
            "nameLocation": "429:14:4",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "443:2:4"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46,
            "nodeType": "FunctionDefinition",
            "src": "894:167:4",
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "927:134:4",
              "statements": [
                {
                  "expression": {
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28,
                      "name": "airnodeRrp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "937:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAirnodeRrpV0_$417",
                        "typeString": "contract IAirnodeRrpV0"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30,
                          "name": "_airnodeRrp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "964:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 29,
                        "name": "IAirnodeRrpV0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "950:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAirnodeRrpV0_$417_$",
                          "typeString": "type(contract IAirnodeRrpV0)"
                        }
                      },
                      "id": 31,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "950:26:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAirnodeRrpV0_$417",
                        "typeString": "contract IAirnodeRrpV0"
                      }
                    },
                    "src": "937:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAirnodeRrpV0_$417",
                      "typeString": "contract IAirnodeRrpV0"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "937:39:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1042:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RrpRequesterV0_$47",
                              "typeString": "contract RrpRequesterV0"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RrpRequesterV0_$47",
                              "typeString": "contract RrpRequesterV0"
                            }
                          ],
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1034:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 38,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1034:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1034:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1049:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 35,
                            "name": "_airnodeRrp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "1000:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 34,
                          "name": "IAirnodeRrpV0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 417,
                          "src": "986:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAirnodeRrpV0_$417_$",
                            "typeString": "type(contract IAirnodeRrpV0)"
                          }
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "986:26:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAirnodeRrpV0_$417",
                          "typeString": "contract IAirnodeRrpV0"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1013:20:4",
                      "memberName": "setSponsorshipStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 325,
                      "src": "986:47:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "986:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "986:68:4"
                }
              ]
            },
            "documentation": {
              "id": 23,
              "nodeType": "StructuredDocumentation",
              "src": "548:341:4",
              "text": "@dev Airnode RRP address is set at deployment and is immutable.\n RrpRequester is made its own sponsor by default. RrpRequester can also\n be sponsored by others and use these sponsorships while making\n requests, i.e., using this default sponsorship is optional.\n @param _airnodeRrp Airnode RRP contract address"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_airnodeRrp",
                  "nameLocation": "914:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "906:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:21:4"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "927:0:4"
            },
            "scope": 47,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "RrpRequesterV0",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "100:69:4",
          "text": "@title The contract to be inherited to make Airnode RRP requests"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47
        ],
        "name": "RrpRequesterV0",
        "nameLocation": "178:14:4",
        "scope": 48,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 4
}