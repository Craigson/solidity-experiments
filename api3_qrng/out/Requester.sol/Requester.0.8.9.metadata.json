{
  "compiler": {
    "version": "0.8.9+commit.e5eed63a"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_airnodeRrp",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "requestId",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "response",
            "type": "uint256"
          }
        ],
        "name": "ReceivedUint256",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "requestId",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "uint256[]",
            "name": "response",
            "type": "uint256[]"
          }
        ],
        "name": "ReceivedUint256Array",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "requestId",
            "type": "bytes32"
          }
        ],
        "name": "RequestedUint256",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "requestId",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "size",
            "type": "uint256"
          }
        ],
        "name": "RequestedUint256Array",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "airnode",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "airnodeRrp",
        "outputs": [
          {
            "internalType": "contract IAirnodeRrpV0",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "endpointIdUint256",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "endpointIdUint256Array",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "name": "expectingRequestWithIdToBeFulfilled",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "requestId",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "fulfillUint256Array",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_airnode",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "_endpointIdUint256",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "_endpointIdUint256Array",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "_sponsorWallet",
            "type": "address"
          }
        ],
        "name": "setRequestParameters",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "sponsorWallet",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "fulfillUint256Array(bytes32,bytes)": {
          "params": {
            "data": "ABI-encoded response",
            "requestId": "Request ID"
          }
        },
        "setRequestParameters(address,bytes32,bytes32,address)": {
          "details": "No access control is implemented here for convenience. This is not secure because it allows the contract to be pointed to an arbitrary Airnode. Normally, this function should only be callable by the \"owner\" or not exist in the first place.",
          "params": {
            "_airnode": "Airnode address",
            "_endpointIdUint256": "Endpoint ID used to request a `uint256`",
            "_endpointIdUint256Array": "Endpoint ID used to request a `uint256[]`",
            "_sponsorWallet": "Sponsor wallet address"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "fulfillUint256Array(bytes32,bytes)": {
          "notice": "Called by the Airnode through the AirnodeRrp contract to fulfill the request"
        },
        "setRequestParameters(address,bytes32,bytes32,address)": {
          "notice": "Sets parameters used in requesting QRNG services"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "src/Requester.sol": "Requester"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@openzeppelin/=lib/openzeppelin-contracts/",
      ":airnode-protocol/=lib/airnode/packages/airnode-protocol/",
      ":airnode/=lib/airnode/",
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
    ]
  },
  "sources": {
    "lib/airnode/packages/airnode-protocol/contracts/rrp/interfaces/IAirnodeRrpV0.sol": {
      "keccak256": "0x5306571db1377e8c9dd8cb6e6c7a8deaa2d8ec540e7b2b229e9db5aa5da21277",
      "license": "MIT",
      "urls": [
        "bzz-raw://3ff47c4fb89e55478d180e6a78049009ef57ba34688c1c454c12a7fd34c6df3a",
        "dweb:/ipfs/QmQyKgg7mXgcyfnDiaTr5s7JDqFWQY6xbL6M5ajDiJGuwo"
      ]
    },
    "lib/airnode/packages/airnode-protocol/contracts/rrp/interfaces/IAuthorizationUtilsV0.sol": {
      "keccak256": "0x597a40e9911628f6bc1d845c9ebe7c345833e8814caa5ce02a8597d3b4ee7975",
      "license": "MIT",
      "urls": [
        "bzz-raw://61c3e2fcf29d5cbc12b86ba82109675d1291def1e26e25982ad12859fe3d3a76",
        "dweb:/ipfs/QmPtfN5tmTgzGCXyxBQktuWAkxVWsg7Q7F8FB6YJveaDJq"
      ]
    },
    "lib/airnode/packages/airnode-protocol/contracts/rrp/interfaces/ITemplateUtilsV0.sol": {
      "keccak256": "0x4212b264303a78b3c3ed0230cf23b7c3ca58bccec936eccd1d4924347b0fea47",
      "license": "MIT",
      "urls": [
        "bzz-raw://eaf9f61c252264854cbdc409692f99d00327ad7ca9cd4bc17f3b0164e4bc8d76",
        "dweb:/ipfs/QmYWvPeNGjND5kYPTMhU6RJRwgkHWqvYYoN24Lnbjndj8d"
      ]
    },
    "lib/airnode/packages/airnode-protocol/contracts/rrp/interfaces/IWithdrawalUtilsV0.sol": {
      "keccak256": "0x732a3a2447150d8a8097042719ca1faf35e06cbfec364d1d6b17aae254cfd520",
      "license": "MIT",
      "urls": [
        "bzz-raw://4647ec4eb4c54e4d4a0af973e8804fdd5df0f6c5aa4d70bbeede40ea40bd672b",
        "dweb:/ipfs/QmSgVM8e6tAvwtWd5Tx9rewsBTpJwFo4J3A2vvQDZZvC9B"
      ]
    },
    "lib/airnode/packages/airnode-protocol/contracts/rrp/requesters/RrpRequesterV0.sol": {
      "keccak256": "0x5a517e7b6e9a3bc7667a44866edbb6db81d8b0fde16325d1d49d1e64494568c8",
      "license": "MIT",
      "urls": [
        "bzz-raw://8504ba05ab2a750ac2ae2bd2925a5fdd82219594b6881ba1d5016b7cde39a99d",
        "dweb:/ipfs/Qmdk3ACLaQeeW3HNUte2s4HSTNpB3fGDZCfjpmUrDtPGsV"
      ]
    },
    "src/Requester.sol": {
      "keccak256": "0x8d1c2b89afce52a9aa715d8b6563d14b7094d0467f3d63d1723d6068ddfded94",
      "license": "UNLICENSED",
      "urls": [
        "bzz-raw://51d54ca2ef2d03a2c9f06481f963fa9aaa383979a43efb47b00535ca7d65f03d",
        "dweb:/ipfs/QmNuT83XgJHjKYTM4BLkgoWtvWrJAvMvrsJqaAhHPfY4G4"
      ]
    }
  },
  "version": 1
}